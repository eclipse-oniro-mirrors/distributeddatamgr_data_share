# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##############################hydra-fuzz########################################
import("//build/test.gni")
import("//build/config/features.gni")
import("//foundation/distributeddatamgr/data_share/datashare.gni")

import("//build/ohos.gni")
import("//build/ohos_var.gni")
##############################fuzztest##########################################
ohos_fuzztest("DataShareHelpFuzzTest") {
  module_out_path = "data_share/data_share"
  fuzz_config_file = "//foundation/distributeddatamgr/data_share/test/fuzztest/datasharehelp_fuzzer"

  include_dirs = [
    "${datashare_innerapi_path}/consumer/include",
    "${datashare_innerapi_path}/common/include",
    "${datashare_common_native_path}/include",
    "${datashare_native_proxy_path}/include",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "${datashare_common_native_path}/src/datashare_string_utils.cpp",
    "${datashare_native_proxy_path}/src/data_share_service_proxy.cpp",
    "datasharehelp_fuzzer.cpp",
  ]

  deps = [
    "${datashare_innerapi_path}:datashare_consumer",
    "${datashare_innerapi_path}/common:datashare_common",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_base:session_info",
    "ability_runtime:extension_manager",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "hitrace:libhitracechain",
    "ipc:ipc_single",
    "ipc:rpc",
    "samgr:samgr_proxy",
  ]
}

###############################################################################
group("fuzztest") {
  testonly = true
  deps = []

  deps += [
    # deps file
    ":DataShareHelpFuzzTest",
  ]
}
###############################################################################