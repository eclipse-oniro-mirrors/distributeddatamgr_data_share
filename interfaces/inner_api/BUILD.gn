# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/distributeddatamgr/data_share/datashare.gni")

config("ability_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "common/include",
    "consumer/include",
    "provider/include",
    "${datashare_native_consumer_path}/include",
    "${datashare_native_provider_path}/include",
    "${datashare_native_proxy_path}/include",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

config("datashare_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "common/include",
    "consumer/include",
    "provider/include",
    "${datashare_common_native_path}/include",
    "${datashare_native_consumer_path}/controller/common",
    "${datashare_native_consumer_path}/controller/provider/include",
    "${datashare_native_consumer_path}/controller/service/include",
    "${datashare_native_consumer_path}/include",
    "${datashare_native_provider_path}/include",
    "${datashare_native_proxy_path}/include",
  ]
}

datashare_consumer_sources = [
  "${datashare_common_native_path}/src/call_reporter.cpp",
  "${datashare_common_native_path}/src/datashare_string_utils.cpp",
  "${datashare_common_native_path}/src/datashare_uri_utils.cpp",
  "${datashare_native_consumer_path}/controller/provider/src/ext_special_controller.cpp",
  "${datashare_native_consumer_path}/controller/provider/src/general_controller_provider_impl.cpp",
  "${datashare_native_consumer_path}/controller/service/src/general_controller_service_impl.cpp",
  "${datashare_native_consumer_path}/controller/service/src/persistent_data_controller.cpp",
  "${datashare_native_consumer_path}/controller/service/src/published_data_controller.cpp",
  "${datashare_native_consumer_path}/src/datashare_connection.cpp",
  "${datashare_native_consumer_path}/src/datashare_helper.cpp",
  "${datashare_native_consumer_path}/src/datashare_helper_impl.cpp",
  "${datashare_native_consumer_path}/src/dataproxy_handle.cpp",
  "${datashare_native_consumer_path}/src/datashare_proxy.cpp",
  "${datashare_native_proxy_path}/src/ams_mgr_proxy.cpp",
  "${datashare_native_proxy_path}/src/data_proxy_observer_stub.cpp",
  "${datashare_native_proxy_path}/src/data_share_manager_impl.cpp",
  "${datashare_native_proxy_path}/src/data_share_service_proxy.cpp",
  "${datashare_native_proxy_path}/src/idata_share_client_death_observer.cpp",
  "${datashare_native_proxy_path}/src/published_data_subscriber_manager.cpp",
  "${datashare_native_proxy_path}/src/rdb_subscriber_manager.cpp",
  "${datashare_native_proxy_path}/src/proxy_data_subscriber_manager.cpp",
]

datashare_consumer_external_deps = [
  "ability_base:want",
  "ability_base:zuri",
  "ability_runtime:app_context",
  "ability_runtime:extension_manager",
  "c_utils:utils",
  "common_event_service:cesfwk_innerkits",
  "hilog:libhilog",
  "hisysevent:libhisysevent",
  "hitrace:hitrace_meter",
  "hitrace:libhitracechain",
  "ipc:ipc_single",
  "ipc:rpc",
  "samgr:samgr_proxy",
]

config("permission_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "common/include",
    "permission/include",
    "${datashare_common_native_path}/include",
    "${datashare_native_permission_path}/include",
  ]
}

config("permission_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "common/include",
    "permission/include",
  ]
}

ohos_shared_library("datashare_consumer") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [ "${datashare_common_native_path}/include" ]

  sources = datashare_consumer_sources
  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]
  version_script = "consumer/libdatashare_consumer.map"
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  deps = [ "${datashare_innerapi_path}/common:datashare_common" ]

  external_deps = datashare_consumer_external_deps
  external_deps += [ "ability_runtime:ability_connect_callback_stub" ]

  public_external_deps = [
    "ability_runtime:dataobs_manager",
    "kv_store:distributeddata_inner",
  ]

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_shared_library("datashare_permission") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = []

  sources = [
    "${datashare_common_native_path}/src/datashare_string_utils.cpp",
    "${datashare_native_permission_path}/src/data_share_called_config.cpp",
    "${datashare_native_permission_path}/src/data_share_permission.cpp",
  ]
  configs = [ ":permission_config" ]
  public_configs = [ ":permission_public_config" ]
  version_script = "permission/libdatashare_permission.map"
  innerapi_tags = [ "platformsdk" ]
  deps = [ "${datashare_innerapi_path}/common:datashare_common" ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:app_context",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "bundle_framework:libappexecfwk_common",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_shared_library("datashare_provider") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [ "${datashare_common_napi_path}/include" ]

  sources = [
    "${datashare_common_native_path}/src/datashare_string_utils.cpp",
    "${datashare_native_provider_path}/src/datashare_ext_ability.cpp",
    "${datashare_native_provider_path}/src/datashare_ext_ability_context.cpp",
    "${datashare_native_provider_path}/src/datashare_stub.cpp",
    "${datashare_native_provider_path}/src/datashare_stub_impl.cpp",
    "${datashare_native_provider_path}/src/datashare_uv_queue.cpp",
    "${datashare_native_provider_path}/src/js_datashare_ext_ability.cpp",
    "${datashare_native_provider_path}/src/js_datashare_ext_ability_context.cpp",
  ]
  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]
  version_script = "provider/libdatashare_provider.map"
  innerapi_tags = [ "platformsdk" ]
  deps = [
    "${datashare_innerapi_path}/common:datashare_common",
    "${datashare_napi_path}/dataShare:datashare_jscommon",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_connect_callback_stub",
    "ability_runtime:ability_context_native",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:extensionkit_native",
    "ability_runtime:napi_common",
    "ability_runtime:runtime",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_napi",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  public_external_deps = [ "ability_runtime:dataobs_manager" ]

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_shared_library("datashare_ext_ability_module") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [ "${datashare_native_provider_path}/include" ]

  sources = [ "${datashare_native_provider_path}/src/datashare_ext_ability_module_loader.cpp" ]

  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]

  deps = [ ":datashare_provider" ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:abilitykit_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_napi",
    "ipc:ipc_single",
    "napi:ace_napi",
  ]

  relative_install_dir = "extensionability/"
  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_static_library("datashare_consumer_static") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [ "${datashare_common_native_path}/include" ]

  sources = datashare_consumer_sources
  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]
  deps = [ "${datashare_innerapi_path}/common:datashare_common_static" ]

  external_deps = datashare_consumer_external_deps

  public_external_deps = [ "kv_store:distributeddata_inner" ]

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}
