# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/distributeddatamgr/data_share/datashare.gni")

config("ability_config") {
  visibility = [ ":*" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

config("datashare_public_config") {
  visibility = [ ":*" ]

  include_dirs =
      [ "${datashare_base_path}/interfaces/inner_api/common/include" ]
}

datashare_common_include_dirs = [
  "${datashare_common_native_path}/include",
  "${datashare_base_path}/interfaces/inner_api/common/include",
  "${datashare_base_path}/interfaces/inner_api/consumer/include",
  "${datashare_base_path}/interfaces/inner_api/provider/include",
  "${datashare_native_proxy_path}/include",
  "${kvstore_base_path}/frameworks/common",
]

datashare_common_sources = [
  "${datashare_common_native_path}/src/datashare_abs_result_set.cpp",
  "${datashare_common_native_path}/src/datashare_block_writer_impl.cpp",
  "${datashare_common_native_path}/src/datashare_itypes_utils.cpp",
  "${datashare_common_native_path}/src/datashare_result_set.cpp",
  "${datashare_common_native_path}/src/datashare_template.cpp",
  "${datashare_common_native_path}/src/datashare_valuebucket_convert.cpp",
  "${datashare_common_native_path}/src/ikvstore_data_service.cpp",
  "${datashare_common_native_path}/src/ishared_result_set.cpp",
  "${datashare_common_native_path}/src/ishared_result_set_proxy.cpp",
  "${datashare_common_native_path}/src/ishared_result_set_stub.cpp",
  "${datashare_common_native_path}/src/shared_block.cpp",
]

datashare_common_external_deps = [
  "ability_base:zuri",
  "c_utils:utils",
  "hilog:libhilog",
  "hisysevent:libhisysevent",
  "hitrace:hitrace_meter",
  "hitrace:libhitracechain",
  "ipc:ipc_single",
]

ohos_shared_library("datashare_common") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = datashare_common_include_dirs

  sources = datashare_common_sources

  deps = []

  public_deps = []

  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]
  version_script = "libdatashare_common.map"
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]

  external_deps = datashare_common_external_deps

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_static_library("datashare_common_static") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = datashare_common_include_dirs

  sources = datashare_common_sources

  deps = []

  public_deps = []

  configs = [ ":ability_config" ]
  public_configs = [ ":datashare_public_config" ]

  external_deps = datashare_common_external_deps

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}
