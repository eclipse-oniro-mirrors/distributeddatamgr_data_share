# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//foundation/distributeddatamgr/data_share/datashare.gni")

rust_cxx("datashare_ani_cxx_gen") {
  sources = [
    "src/wrapper.rs"
  ]
}

ohos_static_library("datashare_ani_cxx") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  stack_protector_ret = true

  include_dirs = [
    "include",
    "${target_gen_dir}/src",
  ]

  sources = [
    "src/cxx/datashare_ani.cpp",
    "src/cxx/ani_inner_observer.cpp",
    "src/cxx/ani_observer.cpp",
  ]
  sources += get_target_outputs(":datashare_ani_cxx_gen")
  deps = [
    "../../../interfaces/inner_api:datashare_consumer",
    "${datashare_innerapi_path}/common:datashare_common",
    ":datashare_ani_cxx_gen",
    "//third_party/rust/crates/cxx:cxx_cppdeps",
  ]
  external_deps = [
    "ability_runtime:ani_base_context",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "runtime_core:ani",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "hitrace:libhitracechain",
    "ipc:ipc_single",
  ]
  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
}

ohos_rust_shared_library("datashare_ani") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    boundary_sanitize = true
    all_ubsan = true
    debug = false
  }

  sources = [ "src/lib.rs" ]
  
  external_deps = [
    "runtime_core:ani",
    "netmanager_base:ani_rs",
    "samgr:samgr_rust",
    "ipc:ipc_rust",
  ]
  deps = [
    ":datashare_ani_cxx",
    "//third_party/rust/crates/serde/serde:lib",
    "//third_party/rust/crates/cxx:lib",
  ]

  clippy_lints = "none"

  subsystem_name = "distributeddatamgr"
  part_name = "data_share"
  output_extension = "so"
}